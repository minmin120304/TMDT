import { DownOutlined, QuestionCircleOutlined, RightOutlined } from '@ant-design/icons';
import { Button, Card, Col, Row, Table } from 'antd';
import { useState } from 'react';

import Container from '_s/components/Container';

const WorkingPerformance = () => {
  const [expandedRows, setExpandedRows] = useState(['order-management']);

  const handleExpand = (key) => {
    setExpandedRows(prev =>
      prev.includes(key) ? prev.filter(k => k !== key) : [...prev, key]
    );
  };

  const MetricCard = ({ title, value, status, linkText }) => (
    <div className="border rounded-lg p-4 bg-white">
      <div className="text-sm text-gray-600 mb-2">{title}</div>
      <div className="flex items-baseline gap-2 mb-2">
        <span className="text-2xl font-semibold">{value}</span>
        <span className="text-sm text-gray-500">{status}</span>
      </div>
      <Button type="link" className="p-0 h-auto text-blue-500">
        {linkText} <RightOutlined className="text-xs" />
      </Button>
    </div>
  );

  const detailColumns = [
    {
      title: 'Ch·ªâ s·ªë', dataIndex: 'metric', key: 'metric',
      render: (text, record) => (
        <div className="flex items-center gap-2">
          {record.children && (
            <Button
              type="text"
              size="small"
              icon={expandedRows.includes(record.key) ? <DownOutlined /> : <RightOutlined />}
              onClick={() => handleExpand(record.key)}
            />
          )}
          <span className={record.indent ? 'ml-6' : ''}>{text}</span>
          {record.info && <QuestionCircleOutlined className="text-gray-400 text-xs" />}
        </div>
      ),
    },
    { title: 'Shop c·ªßa t√¥i', dataIndex: 'myShop', key: 'myShop', align: 'center', },
    { title: 'Ch·ªâ ti√™u', dataIndex: 'target', key: 'target', align: 'center', },
    { title: 'K·ª≥ tr∆∞·ªõc', dataIndex: 'previous', key: 'previous', align: 'center', }, {
      title: 'Thao t√°c', dataIndex: 'action', key: 'action', align: 'right', render: () => (
        <Button type="link" className="text-blue-500">
          Xem chi ti·∫øt
        </Button>
      ),
    },
  ];

  const orderManagementData = [
    {
      key: 'order-management', metric: 'Qu·∫£n L√Ω ƒê∆°n H√†ng', myShop: '', target: '', previous: '',
      children: [
        { key: 'completion-rate', metric: 'T·ª∑ l·ªá ƒë∆°n h√†ng kh√¥ng th√†nh c√¥ng', info: true, myShop: '-', target: '<10.00%', previous: '-', indent: true, },
        { key: 'delivery-rate', metric: 'T·ª∑ l·ªá giao h√†ng tr·ªÖ', info: true, myShop: '-', target: '<10.00%', previous: '-', indent: true, },
        { key: 'prep-time', metric: 'Th·ªùi gian chu·∫©n b·ªã h√†ng', info: true, myShop: '-', target: '<1.50 ng√†y', previous: '-', indent: true, },
      ],
    },
  ];

  const productManagementData = [
    {
      key: 'product-management', metric: 'V·ªã Ph·∫°m ƒêƒÉng B√°n', myShop: '', target: '', previous: '',
      children: [
        { key: 'return-rate', metric: 'H√†ng ƒë√£ tr∆∞·ªõc', info: true, myShop: '0.00%', target: '‚â§10.00%', previous: '0.00%', indent: true, },
        { key: 'violations', metric: 'C√°c vi ph·∫°m kh√°c', info: true, myShop: '0', target: '0', previous: '0', indent: true, },
      ],
    },
  ];

  const customerServiceData = [
    {
      key: 'customer-service', metric: 'ChƒÉm s√≥c kh√°ch h√†ng', myShop: '', target: '', previous: '',
      children: [
        { key: 'response-rate', metric: 'T·ªâ l·ªá ph·∫£n h·ªìi', info: true, myShop: '-', target: '‚â•80.00%', previous: '-', indent: true, },
        { key: 'shop-rating', metric: 'ƒê√°nh gi√° Shop', info: true, myShop: '-', target: '‚â•4.00/5', previous: '-', indent: true, },
      ],
    },
  ];

  const violationItems = [
    { label: 'Vi Ph·∫°m ƒê∆°n H√†ng Kh√¥ng Th√†nh C√¥ng', value: '0 ƒêi·ªÉm ph·∫°t' },
    { label: 'Vi Ph·∫°m Giao H√†ng Tr·ªÖ', value: '0 ƒêi·ªÉm ph·∫°t' },
    { label: 'Vi ph·∫°m v·ªÅ ƒëƒÉng b√°n', value: '0 ƒêi·ªÉm ph·∫°t' },
    { label: 'Vi Ph·∫°m Kh√°c', value: '0 ƒêi·ªÉm ph·∫°t' },
  ];

  return (
    <div className="m-5">
      {/* Header Section */}
      <div className="grid grid-cols-3 gap-4 mb-6">
        <Card className="col-span-2">
          <h2 className="text-xl font-semibold mb-2">Xu·∫•t s·∫Øc</h2>
          <p className="text-sm text-gray-600 mb-6">
            Th·∫≠t tuy·ªát, c√°c ch·ªâ s·ªë ho·∫°t ƒë·ªông c·ªßa Shop ƒë·ªÅu ƒë·∫°t ch·ªâ ti√™u. Gi·ªØ v·ªØng hi·ªáu qu·∫£ ho·∫°t ƒë·ªông c·ªßa Shop ƒë·ªÉ thu h√∫t th√™m kh√°ch h√†ng nh√©
          </p>

          <div className="grid grid-cols-3 gap-4">
            <MetricCard title="Qu·∫£n L√Ω ƒê∆°n H√†ng" value="0" status="Ch·ªâ s·ªë kh√¥ng ƒë·∫°t" linkText="Xem" />
            <MetricCard title="Vi ph·∫°m ƒëƒÉng b√°n" value="0" status="Ch·ªâ s·ªë kh√¥ng ƒë·∫°t" linkText="Xem" />
            <MetricCard title="ChƒÉm s√≥c kh√°ch h√†ng" value="0" status="Ch·ªâ s·ªë kh√¥ng ƒë·∫°t" linkText="Xem" />
          </div>
        </Card>

        <Card className="flex flex-col items-center justify-center">
          <div className="text-center mb-4">
            <div className="w-24 h-24 mx-auto mb-4 bg-gray-100 rounded-full flex items-center justify-center">
              <span className="text-4xl">üèÜ</span>
            </div>
            <p className="text-sm text-gray-600">
              C·∫£i thi·ªán hi·ªáu su·∫•t c·ªßa 3 ti√™u ch·ªâ ƒë·ªÉ tham gia Ch∆∞∆°ng tr√¨nh Shop Y√™u Th√≠ch
            </p>
          </div>
          <Button type="link" className="text-blue-500">
            Xem chi ti·∫øt <RightOutlined className="text-xs" />
          </Button>
        </Card>
      </div>

      {/* Detail Section */}
      <Container className="mb-6">
        <span className="text-lg font-semibold">Chi ti·∫øt ch·ªâ s·ªë</span>
        <div className="mb-4">
          <h3 className="font-medium mb-4">Qu·∫£n L√Ω ƒê∆°n H√†ng</h3>
          <Table
            columns={detailColumns}
            dataSource={orderManagementData}
            pagination={false}
            showHeader={true}
            className="mb-6"
          />
        </div>

        <div className="mb-4">
          <h3 className="font-medium mb-4">Vi ph·∫°m ƒëƒÉng b√°n</h3>
          <Table
            columns={detailColumns}
            dataSource={productManagementData}
            pagination={false}
            showHeader={false}
            className="mb-6"
          />
        </div>

        <div>
          <h3 className="font-medium mb-4">ChƒÉm s√≥c kh√°ch h√†ng</h3>
          <Table
            columns={detailColumns}
            dataSource={customerServiceData}
            pagination={false}
            showHeader={false}
          />
        </div>
      </Container>

      {/* Violations Section */}
      <Card
        title={
          <div className="flex justify-between items-center">
            <span className="text-lg font-semibold">
              Sao Qu√° T·ªá <span className="text-sm font-normal text-gray-500">(06/10/2025 ƒê·∫øn 04/01/2026)</span>
            </span>
            <Button type="link" className="text-blue-500">
              Xem th√™m <RightOutlined className="text-xs" />
            </Button>
          </div>
        }
        className="mb-6"
      >
        <Row gutter={24}>
          <Col span={12}>
            <div className="text-center">
              <div className="text-5xl font-bold text-green-500 mb-2">0</div>
              <div className="text-sm text-gray-600 mb-4">ƒêi·ªÉm ph·∫°t</div>
              <div className="text-xs text-gray-500">Tu·∫ßn tr∆∞·ªõc: 0</div>
            </div>
            <div className="mt-6 space-y-3">
              {violationItems.map((item, index) => (
                <div key={index} className="flex justify-between items-center py-2 border-b">
                  <span className="text-sm">{item.label}</span>
                  <span className="text-sm font-medium">{item.value}</span>
                </div>
              ))}
            </div>
          </Col>
          <Col span={12}>
            <div className="bg-gray-50 rounded-lg p-8 h-full flex flex-col items-center justify-center">
              <div className="text-6xl mb-4">üõçÔ∏è</div>
              <p className="text-sm text-gray-500 text-center">
                Xu·∫•t s·∫Øc! Shop b·∫°n kh√¥ng c√≥ b·∫•t k·ª≥ m·ª©c ph·∫°t n√†o t·∫°i th·ªùi ƒëi·ªÉm n√†y
              </p>
            </div>
          </Col>
        </Row>
      </Card>

      {/* Issues Section */}
      <Card
        title={
          <div className="flex justify-between items-center">
            <span className="text-lg font-semibold">V·∫•n ƒë·ªÅ c·∫ßn c·∫£i thi·ªán</span>
            <Button type="link" className="text-blue-500">
              Xem th√™m <RightOutlined className="text-xs" />
            </Button>
          </div>
        }
      >
        <p className="text-sm text-gray-600 mb-6">
          ƒêang c√≥ 0 v·∫•n ƒë·ªÅ m√† Shop c√≥ th·ªÉ c·∫£i thi·ªán ngay.
        </p>

        <Row gutter={24}>
          <Col span={12}>
            <div className="border rounded-lg p-6 text-center">
              <div className="text-5xl font-bold text-green-500 mb-2">0</div>
              <div className="text-sm text-gray-600 mb-4">S·∫£n ph·∫©m ƒëang b√°n g·∫∑p v·∫•n ƒë·ªÅ</div>
              <p className="text-xs text-gray-500">
                Vi ph·∫°m ch√≠nh s√°ch ƒëƒÉng b√°n s·∫£n ph·∫©m c√≥ th·ªÉ b·ªã ƒëi·ªÉm ph·∫°t Sao Qu√° T·ªá.
              </p>
            </div>
          </Col>
          <Col span={12}>
            <div className="border rounded-lg p-6 text-center">
              <div className="text-5xl font-bold text-green-500 mb-2">0</div>
              <div className="text-sm text-gray-600 mb-4">ƒê∆°n h√†ng tr·ªÖ</div>
              <p className="text-xs text-gray-500">
                ƒê∆°n h√†ng giao tr·ªÖ s·∫Ω ·∫£nh h∆∞·ªüng ƒë·∫øn s·ªë ch·ªâ "T·ª∑ l·ªá giao h√†ng tr·ªÖ"
              </p>
            </div>
          </Col>
        </Row>
      </Card>
    </div>
  );
};

export default WorkingPerformance;